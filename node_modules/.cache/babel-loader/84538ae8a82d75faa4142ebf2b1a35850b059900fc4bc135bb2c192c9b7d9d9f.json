{"ast":null,"code":"import{useState}from\"react\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function Square(_ref){let{value,onSquareClick}=_ref;return/*#__PURE__*/_jsx(\"button\",{className:\"square\",onClick:onSquareClick,children:value});}function Board(_ref2){let{xIsNext,squares,onPlay}=_ref2;function handleClick(i){if(calculateWinner(squares)||squares[i]){return;// 如果已经有赢家或该位置已经有棋子，返回\n}const nextSquares=squares.slice();// 创建副本\nnextSquares[i]=xIsNext?\"X\":\"O\";// 根据当前玩家放置棋子\nonPlay(nextSquares);// 更新棋盘状态\n}const winner=calculateWinner(squares);let status;if(winner){status=\"Winner: \"+winner;}else{status=\"Next player: \"+(xIsNext?\"X\":\"O\");}const size=15;// 15x15的棋盘\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"status\",children:status}),Array.from({length:size}).map((_,row)=>/*#__PURE__*/_jsx(\"div\",{className:\"board-row\",children:Array.from({length:size}).map((_,col)=>{const index=row*size+col;// 计算当前位置的索引\nreturn/*#__PURE__*/_jsx(Square,{value:squares[index],onSquareClick:()=>handleClick(index)},index);})},row))]});}export default function Game(){const size=15;const[history,setHistory]=useState([Array(size*size).fill(null)]);const[currentMove,setCurrentMove]=useState(0);const xIsNext=currentMove%2===0;// 当前玩家是否为 'X'\nconst currentSquares=history[currentMove];// 当前棋盘状态\nfunction handlePlay(nextSquares){const nextHistory=[...history.slice(0,currentMove+1),nextSquares];setHistory(nextHistory);setCurrentMove(nextHistory.length-1);// 设置当前回合\n}function jumpTo(nextMove){setCurrentMove(nextMove);}const moves=history.map((squares,move)=>{const description=move>0?`Go to move #${move}`:\"Go to game start\";return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>jumpTo(move),children:description})},move);});return/*#__PURE__*/_jsxs(\"div\",{className:\"game\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"game-board\",children:/*#__PURE__*/_jsx(Board,{xIsNext:xIsNext,squares:currentSquares,onPlay:handlePlay})}),/*#__PURE__*/_jsx(\"div\",{className:\"game-info\",children:/*#__PURE__*/_jsx(\"ol\",{children:moves})})]});}function calculateWinner(squares){const size=15;const directions=[{x:1,y:0},// 横向\n{x:0,y:1},// 纵向\n{x:1,y:1},// 斜向（右下）\n{x:1,y:-1}// 斜向（右上）\n];for(let i=0;i<squares.length;i++){const player=squares[i];if(!player)continue;// 如果当前位置没有棋子，则跳过\nfor(let{x,y}of directions){let count=1;// 当前棋子数\nfor(let step=1;step<5;step++){const newX=i%size+x*step;const newY=Math.floor(i/size)+y*step;if(newX>=0&&newX<size&&newY>=0&&newY<size&&squares[newY*size+newX]===player){count++;}else{break;}}if(count===5){return player;// 返回胜利方\n}}}return null;}","map":{"version":3,"names":["useState","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Square","_ref","value","onSquareClick","className","onClick","children","Board","_ref2","xIsNext","squares","onPlay","handleClick","i","calculateWinner","nextSquares","slice","winner","status","size","Array","from","length","map","_","row","col","index","Game","history","setHistory","fill","currentMove","setCurrentMove","currentSquares","handlePlay","nextHistory","jumpTo","nextMove","moves","move","description","directions","x","y","player","count","step","newX","newY","Math","floor"],"sources":["C:/Users/28798/Desktop/web实验/111/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction Square({ value, onSquareClick }) {\n  return (\n    <button className=\"square\" onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Board({ xIsNext, squares, onPlay }) {\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return; // 如果已经有赢家或该位置已经有棋子，返回\n    }\n    const nextSquares = squares.slice(); // 创建副本\n    nextSquares[i] = xIsNext ? \"X\" : \"O\"; // 根据当前玩家放置棋子\n    onPlay(nextSquares); // 更新棋盘状态\n  }\n\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n\n  const size = 15; // 15x15的棋盘\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      {Array.from({ length: size }).map((_, row) => (\n        <div key={row} className=\"board-row\">\n          {Array.from({ length: size }).map((_, col) => {\n            const index = row * size + col; // 计算当前位置的索引\n            return (\n              <Square\n                key={index}\n                value={squares[index]}\n                onSquareClick={() => handleClick(index)}\n              />\n            );\n          })}\n        </div>\n      ))}\n    </>\n  );\n}\n\nexport default function Game() {\n  const size = 15;\n  const [history, setHistory] = useState([Array(size * size).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0; // 当前玩家是否为 'X'\n  const currentSquares = history[currentMove]; // 当前棋盘状态\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1); // 设置当前回合\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  const moves = history.map((squares, move) => {\n    const description = move > 0 ? `Go to move #${move}` : \"Go to game start\";\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{description}</button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n      </div>\n      <div className=\"game-info\">\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const size = 15;\n  const directions = [\n    { x: 1, y: 0 }, // 横向\n    { x: 0, y: 1 }, // 纵向\n    { x: 1, y: 1 }, // 斜向（右下）\n    { x: 1, y: -1 }, // 斜向（右上）\n  ];\n\n  for (let i = 0; i < squares.length; i++) {\n    const player = squares[i];\n    if (!player) continue; // 如果当前位置没有棋子，则跳过\n\n    for (let { x, y } of directions) {\n      let count = 1; // 当前棋子数\n      for (let step = 1; step < 5; step++) {\n        const newX = (i % size) + x * step;\n        const newY = Math.floor(i / size) + y * step;\n        if (\n          newX >= 0 &&\n          newX < size &&\n          newY >= 0 &&\n          newY < size &&\n          squares[newY * size + newX] === player\n        ) {\n          count++;\n        } else {\n          break;\n        }\n      }\n      if (count === 5) {\n        return player; // 返回胜利方\n      }\n    }\n  }\n\n  return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}